[
  {
    "code": "function greet(name) {\n  return \"Hello, \" + name + \"!\";\n}",
    "language": "JavaScript",
    "distractors": ["Python", "Ruby", "Java"]
  },
  {
    "code": "def greet(name):\n    return f\"Hello, {name}!\"",
    "language": "Python",
    "distractors": ["JavaScript", "C#", "PHP"]
  },
  {
    "code": "public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}",
    "language": "Java",
    "distractors": ["C++", "Python", "Swift"]
  },
  {
    "code": "fn main() {\n    println!(\"Hello, world!\");\n}",
    "language": "Rust",
    "distractors": ["Go", "C", "Haskell"]
  },
  {
    "code": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, World\")\n}",
    "language": "Go",
    "distractors": ["Rust", "Python", "C#"]
  },
  {
    "code": "<?php\n  echo \"Hello, World!\";\n?>",
    "language": "PHP",
    "distractors": ["JavaScript", "Perl", "Ruby"]
  },
  {
    "code": "puts \"Hello, World!\"",
    "language": "Ruby",
    "distractors": ["Python", "Perl", "Lua"]
  },
  {
    "code": "let message = \"Hello, World!\";\nprint(message)",
    "language": "Swift",
    "distractors": ["Kotlin", "Objective-C", "Java"]
  },
  {
    "code": "fun main() {\n    println(\"Hello, World!\")\n}",
    "language": "Kotlin",
    "distractors": ["Java", "Swift", "Scala"]
  },
  {
    "code": "using System;\n\npublic class HelloWorld\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine (\"Hello World!\");\n    }\n}",
    "language": "C#",
    "distractors": ["Java", "VB.NET", "C++"]
  },
  {
    "code": "#include <iostream>\n\nint main() {\n    std::cout << \"Hello, World!\" << std::endl;\n    return 0;\n}",
    "language": "C++",
    "distractors": ["C", "Java", "Rust"]
  },
  {
    "code": "SELECT name, age FROM users WHERE country = 'USA';",
    "language": "SQL",
    "distractors": ["Python", "JSON", "NoSQL"]
  },
  {
    "code": "<ul>\n  <li *ngFor=\"let item of items\">{{ item.name }}</li>\n</ul>",
    "language": "Angular (HTML)",
    "distractors": ["React (JSX)", "Vue.js", "HTML"]
  },
  {
    "code": "const MyComponent = ({ name }) => (\n  <div>Hello, {name}</div>\n);",
    "language": "React (JSX)",
    "distractors": ["Angular", "Vue.js", "JavaScript"]
  },
  {
    "code": "<template>\n  <div>Hello, {{ name }}</div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return { name: 'World' };\n  }\n};\n</script>",
    "language": "Vue.js",
    "distractors": ["Angular", "React (JSX)", "Svelte"]
  },
  {
    "code": "#include <stdio.h>\n\nint main() {\n   printf(\"Hello, World!\\n\");\n   return 0;\n}",
    "language": "C",
    "distractors": ["C++", "Java", "Go"]
  },
  {
    "code": "console.log('Hello from Node.js!');",
    "language": "Node.js",
    "distractors": ["JavaScript (Browser)", "Deno", "Python"]
  },
  {
    "code": "body {\n  font-family: Arial, sans-serif;\n  color: #333;\n}",
    "language": "CSS",
    "distractors": ["HTML", "JavaScript", "SCSS"]
  },
  {
    "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Page</title>\n</head>\n<body>\n  <h1>Welcome</h1>\n</body>\n</html>",
    "language": "HTML",
    "distractors": ["XML", "JSX", "Markdown"]
  },
  {
    "code": "a = [1, 2, 3, 4, 5]\nfor x in a:\n    if x % 2 == 0:\n        print(x)",
    "language": "Python",
    "distractors": ["Ruby", "JavaScript", "Lua"]
  },
  {
    "code": "interface User {\n  name: string;\n  id: number;\n}\nconst user: User = { name: 'Alice', id: 1 };",
    "language": "TypeScript",
    "distractors": ["JavaScript", "Java", "Flow"]
  },
  {
    "code": "x <- c(10, 20, 30, 40)\nmean_val <- mean(x)\nprint(paste(\"Mean is:\", mean_val))",
    "language": "R",
    "distractors": ["Python", "MATLAB", "Julia"]
  },
  {
    "code": "#!/bin/bash\n\nNAME=\"World\"\necho \"Hello, $NAME\"",
    "language": "Bash",
    "distractors": ["Python", "Perl", "Shell"]
  },
  {
    "code": "String message = \"Hello from Groovy\";\nprintln message;",
    "language": "Groovy",
    "distractors": ["Java", "Kotlin", "Scala"]
  },
  {
    "code": "import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        print(\"View loaded\")\n    }\n}",
    "language": "Swift",
    "distractors": ["Objective-C", "Kotlin (Android)", "Java (Android)"]
  },
  {
    "code": "val numbers = listOf(1, 2, 3)\nfor (n in numbers) {\n    println(n)\n}",
    "language": "Kotlin",
    "distractors": ["Java", "Scala", "Swift"]
  },
  {
    "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<note>\n  <to>User</to>\n  <from>System</from>\n  <heading>Reminder</heading>\n  <body>Don't forget!</body>\n</note>",
    "language": "XML",
    "distractors": ["HTML", "JSON", "YAML"]
  },
  {
    "code": "{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isStudent\": false\n}",
    "language": "JSON",
    "distractors": ["JavaScript", "Python Dict", "XML"]
  },
  {
    "code": "module Main exposing (main)\nimport Html exposing (text)\n\nmain = text \"Hello, Elm!\"",
    "language": "Elm",
    "distractors": ["Haskell", "PureScript", "F#"]
  },
  {
    "code": "main = putStrLn \"Hello, Haskell!\"",
    "language": "Haskell",
    "distractors": ["Scala", "F#", "OCaml"]
  },
  {
    "code": "#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        NSLog(@\"Hello, Objective-C!\");\n    }\n    return 0;\n}",
    "language": "Objective-C",
    "distractors": ["C", "C++", "Swift"]
  },
  {
    "code": "object Main extends App {\n  println(\"Hello, Scala!\")\n}",
    "language": "Scala",
    "distractors": ["Java", "Kotlin", "Haskell"]
  },
  {
    "code": "print \"Hello, Perl!\\n\";",
    "language": "Perl",
    "distractors": ["Ruby", "Python", "PHP"]
  },
  {
    "code": "print(\"Hello, Lua!\")",
    "language": "Lua",
    "distractors": ["Python", "JavaScript", "Ruby"]
  },
  {
    "code": "void main() {\n  print('Hello, Dart!');\n}",
    "language": "Dart",
    "distractors": ["JavaScript", "Java", "C#"]
  },
  {
    "code": "A = [1 2 3; 4 5 6; 7 8 9];\ndisp(A(1,2)); % Displays 2",
    "language": "MATLAB",
    "distractors": ["Python (NumPy)", "R", "Julia"]
  },
  {
    "code": "$Message = \"Hello, PowerShell!\"\nWrite-Host $Message",
    "language": "PowerShell",
    "distractors": ["Bash", "CMD Batch", "Python"]
  },
  {
    "code": "defmodule Greeter do\n  def hello(name) do\n    IO.puts \"Hello, #{name}!\"\n  end\nend",
    "language": "Elixir",
    "distractors": ["Ruby", "Erlang", "Crystal"]
  },
  {
    "code": "(defn greet [name]\n  (str \"Hello, \" name \"!\"))\n(println (greet \"Clojure\"))",
    "language": "Clojure",
    "distractors": ["Lisp", "Scheme", "Racket"]
  },
  {
    "code": "let greet name = printfn \"Hello, %s!\" name\ngreet \"F#\"",
    "language": "F#",
    "distractors": ["OCaml", "Haskell", "Scala"]
  },
  {
    "code": "Module HelloWorld\n    Sub Main()\n        Console.WriteLine(\"Hello, VB.NET!\")\n    End Sub\nEnd Module",
    "language": "VB.NET",
    "distractors": ["C#", "Visual Basic 6", "Java"]
  },
  {
    "code": "CREATE TABLE Employees (\n    ID int NOT NULL PRIMARY KEY,\n    Name varchar(255),\n    Salary int\n);",
    "language": "SQL",
    "distractors": ["Python", "NoSQL", "Java"]
  },
  {
    "code": "for i in 1..5 loop\n  dbms_output.put_line('Count: ' || i);\nend loop;",
    "language": "PL/SQL",
    "distractors": ["SQL", "Oracle SQL", "T-SQL"]
  },
  {
    "code": "DECLARE @counter INT = 0;\nWHILE @counter < 5\nBEGIN\n    PRINT 'Counter is ' + CAST(@counter AS VARCHAR);\n    SET @counter = @counter + 1;\nEND;",
    "language": "T-SQL",
    "distractors": ["SQL", "PL/SQL", "MySQL"]
  },
  {
    "code": "public function greet($name)\n{\n    return 'Hello, ' . $name;\n}",
    "language": "PHP",
    "distractors": ["JavaScript", "Python", "Hack"]
  },
  {
    "code": "func add(x int, y int) int {\n    return x + y\n}\nresult := add(5, 3)",
    "language": "Go",
    "distractors": ["C", "Rust", "Python"]
  },
  {
    "code": "let sum = [1, 2, 3].reduce((acc, val) => acc + val, 0);",
    "language": "JavaScript",
    "distractors": ["TypeScript", "Python", "Java"]
  },
  {
    "code": "num_list = [10, 20, 30]\nnum_list.append(40)\nprint(num_list[1]) # Accesses 20",
    "language": "Python",
    "distractors": ["Ruby", "JavaScript", "Java"]
  },
  {
    "code": "struct Point { x: i32, y: i32 }\nlet p = Point { x: 10, y: 20 };\nprintln!(\"Point: ({}, {})\", p.x, p.y);",
    "language": "Rust",
    "distractors": ["C++", "Go", "Swift"]
  },
  {
    "code": "HashMap<String, Integer> map = new HashMap<>();\nmap.put(\"one\", 1);\nmap.put(\"two\", 2);",
    "language": "Java",
    "distractors": ["C#", "Kotlin", "Scala"]
  },
  {
    "code": "$color-primary: #007bff;\n\n.button {\n  background-color: $color-primary;\n  color: white;\n}",
    "language": "Sass/SCSS",
    "distractors": ["CSS", "LESS", "Stylus"]
  },
  {
    "code": "name: Build and Test\non: [push, pull_request]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2",
    "language": "YAML",
    "distractors": ["JSON", "XML", "TOML"]
  },
  {
    "code": "pragma solidity ^0.8.0;\n\ncontract HelloWorld {\n    string public greet = \"Hello World\";\n}",
    "language": "Solidity",
    "distractors": ["JavaScript", "Python", "Vyper"]
  },
  {
    "code": "(display \"Hello, Scheme!\")(newline)",
    "language": "Scheme",
    "distractors": ["Lisp", "Clojure", "Racket"]
  },
  {
    "code": "program HelloWorld;\nbegin\n  WriteLn('Hello, World!');\nend.",
    "language": "Pascal",
    "distractors": ["Ada", "Fortran", "Delphi"]
  },
  {
    "code": "function greet(name) {\n  return \"Hello, \" + name + \"!\";\n}",
    "language": "JavaScript",
    "distractors": ["Python", "Ruby", "Java"]
  },
  {
    "code": "def greet(name):\n    return f\"Hello, {name}!\"",
    "language": "Python",
    "distractors": ["JavaScript", "C#", "PHP"]
  },
  {
    "code": "public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}",
    "language": "Java",
    "distractors": ["C++", "Python", "Swift"]
  },
  {
    "code": "fn main() {\n    println!(\"Hello, world!\");\n}",
    "language": "Rust",
    "distractors": ["Go", "C", "Haskell"]
  },
  {
    "code": "package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, World\")\n}",
    "language": "Go",
    "distractors": ["Rust", "Python", "C#"]
  },
  {
    "code": "<?php\n  echo \"Hello, World!\";\n?>",
    "language": "PHP",
    "distractors": ["JavaScript", "Perl", "Ruby"]
  },
  {
    "code": "puts \"Hello, World!\"",
    "language": "Ruby",
    "distractors": ["Python", "Perl", "Lua"]
  },
  {
    "code": "let message = \"Hello, World!\";\nprint(message)",
    "language": "Swift",
    "distractors": ["Kotlin", "Objective-C", "Java"]
  },
  {
    "code": "fun main() {\n    println(\"Hello, World!\")\n}",
    "language": "Kotlin",
    "distractors": ["Java", "Swift", "Scala"]
  },
  {
    "code": "using System;\n\npublic class HelloWorld\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine (\"Hello World!\");\n    }\n}",
    "language": "C#",
    "distractors": ["Java", "VB.NET", "C++"]
  },
  {
    "code": "#include <iostream>\n\nint main() {\n    std::cout << \"Hello, World!\" << std::endl;\n    return 0;\n}",
    "language": "C++",
    "distractors": ["C", "Java", "Rust"]
  },
  {
    "code": "SELECT name, age FROM users WHERE country = 'USA';",
    "language": "SQL",
    "distractors": ["Python", "JSON", "NoSQL"]
  },
  {
    "code": "<ul>\n  <li *ngFor=\"let item of items\">{{ item.name }}</li>\n</ul>",
    "language": "Angular (HTML)",
    "distractors": ["React (JSX)", "Vue.js", "HTML"]
  },
  {
    "code": "const MyComponent = ({ name }) => (\n  <div>Hello, {name}</div>\n);",
    "language": "React (JSX)",
    "distractors": ["Angular", "Vue.js", "JavaScript"]
  },
  {
    "code": "<template>\n  <div>Hello, {{ name }}</div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return { name: 'World' };\n  }\n};\n</script>",
    "language": "Vue.js",
    "distractors": ["Angular", "React (JSX)", "Svelte"]
  },
  {
    "code": "#include <stdio.h>\n\nint main() {\n   printf(\"Hello, World!\\n\");\n   return 0;\n}",
    "language": "C",
    "distractors": ["C++", "Java", "Go"]
  },
  {
    "code": "console.log('Hello from Node.js!');",
    "language": "Node.js",
    "distractors": ["JavaScript (Browser)", "Deno", "Python"]
  },
  {
    "code": "body {\n  font-family: Arial, sans-serif;\n  color: #333;\n}",
    "language": "CSS",
    "distractors": ["HTML", "JavaScript", "SCSS"]
  },
  {
    "code": "<!DOCTYPE html>\n<html>\n<head>\n  <title>My Page</title>\n</head>\n<body>\n  <h1>Welcome</h1>\n</body>\n</html>",
    "language": "HTML",
    "distractors": ["XML", "JSX", "Markdown"]
  },
  {
    "code": "a = [1, 2, 3, 4, 5]\nfor x in a:\n    if x % 2 == 0:\n        print(x)",
    "language": "Python",
    "distractors": ["Ruby", "JavaScript", "Lua"]
  },
  {
    "code": "interface User {\n  name: string;\n  id: number;\n}\nconst user: User = { name: 'Alice', id: 1 };",
    "language": "TypeScript",
    "distractors": ["JavaScript", "Java", "Flow"]
  },
  {
    "code": "x <- c(10, 20, 30, 40)\nmean_val <- mean(x)\nprint(paste(\"Mean is:\", mean_val))",
    "language": "R",
    "distractors": ["Python", "MATLAB", "Julia"]
  },
  {
    "code": "#!/bin/bash\n\nNAME=\"World\"\necho \"Hello, $NAME\"",
    "language": "Bash",
    "distractors": ["Python", "Perl", "Shell"]
  },
  {
    "code": "String message = \"Hello from Groovy\";\nprintln message;",
    "language": "Groovy",
    "distractors": ["Java", "Kotlin", "Scala"]
  },
  {
    "code": "import UIKit\n\nclass ViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        print(\"View loaded\")\n    }\n}",
    "language": "Swift",
    "distractors": ["Objective-C", "Kotlin (Android)", "Java (Android)"]
  },
  {
    "code": "val numbers = listOf(1, 2, 3)\nfor (n in numbers) {\n    println(n)\n}",
    "language": "Kotlin",
    "distractors": ["Java", "Scala", "Swift"]
  },
  {
    "code": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<note>\n  <to>User</to>\n  <from>System</from>\n  <heading>Reminder</heading>\n  <body>Don't forget!</body>\n</note>",
    "language": "XML",
    "distractors": ["HTML", "JSON", "YAML"]
  },
  {
    "code": "{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isStudent\": false\n}",
    "language": "JSON",
    "distractors": ["JavaScript", "Python Dict", "XML"]
  },
  {
    "code": "module Main exposing (main)\nimport Html exposing (text)\n\nmain = text \"Hello, Elm!\"",
    "language": "Elm",
    "distractors": ["Haskell", "PureScript", "F#"]
  },
  {
    "code": "main = putStrLn \"Hello, Haskell!\"",
    "language": "Haskell",
    "distractors": ["Scala", "F#", "OCaml"]
  },
  {
    "code": "#import <Foundation/Foundation.h>\n\nint main(int argc, const char * argv[]) {\n    @autoreleasepool {\n        NSLog(@\"Hello, Objective-C!\");\n    }\n    return 0;\n}",
    "language": "Objective-C",
    "distractors": ["C", "C++", "Swift"]
  },
  {
    "code": "object Main extends App {\n  println(\"Hello, Scala!\")\n}",
    "language": "Scala",
    "distractors": ["Java", "Kotlin", "Haskell"]
  },
  {
    "code": "print \"Hello, Perl!\\n\";",
    "language": "Perl",
    "distractors": ["Ruby", "Python", "PHP"]
  },
  {
    "code": "print(\"Hello, Lua!\")",
    "language": "Lua",
    "distractors": ["Python", "JavaScript", "Ruby"]
  },
  {
    "code": "void main() {\n  print('Hello, Dart!');\n}",
    "language": "Dart",
    "distractors": ["JavaScript", "Java", "C#"]
  },
  {
    "code": "A = [1 2 3; 4 5 6; 7 8 9];\ndisp(A(1,2)); % Displays 2",
    "language": "MATLAB",
    "distractors": ["Python (NumPy)", "R", "Julia"]
  },
  {
    "code": "$Message = \"Hello, PowerShell!\"\nWrite-Host $Message",
    "language": "PowerShell",
    "distractors": ["Bash", "CMD Batch", "Python"]
  },
  {
    "code": "defmodule Greeter do\n  def hello(name) do\n    IO.puts \"Hello, #{name}!\"\n  end\nend",
    "language": "Elixir",
    "distractors": ["Ruby", "Erlang", "Crystal"]
  },
  {
    "code": "(defn greet [name]\n  (str \"Hello, \" name \"!\"))\n(println (greet \"Clojure\"))",
    "language": "Clojure",
    "distractors": ["Lisp", "Scheme", "Racket"]
  },
  {
    "code": "let greet name = printfn \"Hello, %s!\" name\ngreet \"F#\"",
    "language": "F#",
    "distractors": ["OCaml", "Haskell", "Scala"]
  },
  {
    "code": "Module HelloWorld\n    Sub Main()\n        Console.WriteLine(\"Hello, VB.NET!\")\n    End Sub\nEnd Module",
    "language": "VB.NET",
    "distractors": ["C#", "Visual Basic 6", "Java"]
  },
  {
    "code": "CREATE TABLE Employees (\n    ID int NOT NULL PRIMARY KEY,\n    Name varchar(255),\n    Salary int\n);",
    "language": "SQL",
    "distractors": ["Python", "NoSQL", "Java"]
  },
  {
    "code": "for i in 1..5 loop\n  dbms_output.put_line('Count: ' || i);\nend loop;",
    "language": "PL/SQL",
    "distractors": ["SQL", "Oracle SQL", "T-SQL"]
  },
  {
    "code": "DECLARE @counter INT = 0;\nWHILE @counter < 5\nBEGIN\n    PRINT 'Counter is ' + CAST(@counter AS VARCHAR);\n    SET @counter = @counter + 1;\nEND;",
    "language": "T-SQL",
    "distractors": ["SQL", "PL/SQL", "MySQL"]
  },
  {
    "code": "public function greet($name)\n{\n    return 'Hello, ' . $name;\n}",
    "language": "PHP",
    "distractors": ["JavaScript", "Python", "Hack"]
  },
  {
    "code": "func add(x int, y int) int {\n    return x + y\n}\nresult := add(5, 3)",
    "language": "Go",
    "distractors": ["C", "Rust", "Python"]
  },
  {
    "code": "let sum = [1, 2, 3].reduce((acc, val) => acc + val, 0);",
    "language": "JavaScript",
    "distractors": ["TypeScript", "Python", "Java"]
  },
  {
    "code": "num_list = [10, 20, 30]\nnum_list.append(40)\nprint(num_list[1]) # Accesses 20",
    "language": "Python",
    "distractors": ["Ruby", "JavaScript", "Java"]
  },
  {
    "code": "struct Point { x: i32, y: i32 }\nlet p = Point { x: 10, y: 20 };\nprintln!(\"Point: ({}, {})\", p.x, p.y);",
    "language": "Rust",
    "distractors": ["C++", "Go", "Swift"]
  },
  {
    "code": "HashMap<String, Integer> map = new HashMap<>();\nmap.put(\"one\", 1);\nmap.put(\"two\", 2);",
    "language": "Java",
    "distractors": ["C#", "Kotlin", "Scala"]
  }
]
